"""
K-Means初始化优化K-Means++:
k个初始化的质心的位置选择对最后的聚类结果和运行时间都有很大的影响，因此需要选择合适的k个质心。
如果仅仅是完全随机的选择，有可能导致算法收敛很慢。
a)  从输入的数据点集合中随机选择一个点作为第一个聚类中心μ1μ1
　　　　b) 对于数据集中的每一个点xixi，计算它与已选择的聚类中心中最近聚类中心的距离D(xi)=argmin||xi−μr||2，r=1,2,...kselected
           D(xi)=argmin||xi−μr||22r=1,2,...kselected
　　　　c) 选择一个新的数据点作为新的聚类中心，选择的原则是：D(x)较大的点，被选取作为聚类中心的概率较大
　　　　d) 重复b和c直到选择出k个聚类质心
　　　　e) 利用这k个质心来作为初始化质心去运行标准的K-Means算法
初始化只随机选择一个点做质心
依次求每个数据点到该质心的距离，将距离最远的数据点作为第二个质心
再依次求剩余数据点到这两个质心的距离，再将其中距离最远的点作为第三个质心
直到选择出k个聚类质心

K-Means距离计算优化elkan K-Means：
目标是减少不必要的距离的计算。
elkan K-Means利用了两边之和大于等于第三边,以及两边之差小于第三边的三角形性质，来减少距离的计算。

"""
